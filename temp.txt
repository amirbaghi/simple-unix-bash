    string temp;
    // Clearing the args vector from previous args
    cmds.clear();

    // Splitting by |
    regex pipe("(?=[^|])(?:[^|]*\\([^)]+\\))*[^|]*");
    auto begin = sregex_iterator(input.begin(), input.end(), pipe);
    auto end = sregex_iterator();

    // Applying Regex for single commands
    regex delims("[^\\s\"]+|([\"\'])(?:(?=(\\?))\2.)*?\1");
    sregex_iterator tokens_begin;
    sregex_iterator tokens_end;

    for (sregex_iterator i = begin; i != end; i++)
    {
        temp = (*i).str();

        cout << temp << "TEMP" << endl;
        tokens_begin = sregex_iterator(temp.begin(), temp.end(), delims);
        tokens_end = sregex_iterator();

        std::vector<string> args;

        // Filling the args vector with the tokens
        for (sregex_iterator j = tokens_begin; j != tokens_end; j++)
        {
            args.push_back((*j).str());
        }

        cmds.push_back(args);
    }

    for (std::vector<string> cmd: cmds)
    {
        for (string arg: cmd)
        {
            cout << arg << "END OF TOKEN";
        }

        cout << endl;
    }